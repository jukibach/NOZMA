name: Build a JAR in spring boot using springboot and push it to ECR
on:
    push:
        branches: [ master, develop ]
    pull_request:
        branches: [ master, develop ]

permissions:
    id-token: write   # This is required for requesting the JWT
    contents: read

jobs:

    build-and-push-images:
        name: Build and push images to ECR
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v2

            -   name: Cache Maven dependencies
                uses: actions/cache@v1
                with:
                    path: ~/.m2/repository
                    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                    restore-keys: |
                                ${{ runner.os }}-maven-

            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    java-version: '17'
                    distribution: 'adopt'

            -   name: Clean and install Maven
                run: mvn clean install

            -   name: Configure AWS credentials using OIDC
                uses: aws-actions/configure-aws-credentials@v1
                with:
                    role-to-assume: ${{ secrets.AWS_ROLE }}
                    aws-region: ap-southeast-1

            -   name: Login to Amazon ECR
                id: login-ecr
                uses: aws-actions/amazon-ecr-login@v1

            -   name: Check ECR Permissions
                run: |
                    aws ecr describe-repositories --region ap-southeast-1
                    aws ecr get-login-password --region ap-southeast-1

            -   name: Build and Push Docker image to AWS ECR
                env:
                    ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                    ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
                    IMAGE_TAG: latest
                run: |
                    # Build a docker container and push it to ECR 
                    echo $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                    
                    docker build -t nozma-be:$IMAGE_TAG -f Dockerfile .
                    docker tag nozma-be:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                    
                    echo "Pushing image to ECR..."
                    docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
